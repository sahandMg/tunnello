<?php

namespace Tests\Feature\HTTPTest;

use App\Models\User;

use Illuminate\Foundation\Testing\Concerns\InteractsWithSession;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;

class AuthRoutesTest extends TestCase
{
    use WithFaker, InteractsWithSession;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('migrate');
    }

    /**
     * A basic feature test example.
     * @test
     * @return void
     */
    public function register_test()
    {
        $this->startSession();
        $response = $this->get('/register');
        $data = [
            'name' => $this->faker->name,
            'email' => $this->faker->email,
            'password' => '32132332321123',
            'password_confirmation' => '32132332321123',
            '_token' => csrf_token()
        ];
        $response = $this->post('/register', $data);
        if (session()->has('errors')) {
            dd(session('errors')->all());
        }
        $response->assertRedirect('/home');
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertEquals(1, User::get()->count());
        $response = $this->get('/chat');
        $response->assertOk();
    }

    /**
     * @test
     */

    public function register_test_with_error()
    {
        $data = [
            'name' => $this->faker->name,
            'email' => $this->faker->email,
            'password' => '3213233232113', // changed
            'password_confirmation' => '32132332321123',
            '_token' => csrf_token()
        ];
        $response = $this->post('/register', $data)->assertSessionHasErrors();
    }

    /**
     * @test
     */

    public function login_test()
    {
        $data = [
            'name' => $this->faker->name,
            'email' => $this->faker->email,
            'password' => '32132332321123',
            'password_confirmation' => '32132332321123',
            '_token' => csrf_token()
        ];
        $this->post('/register', $data);
        $response = $this->post('/login', $data);
        $response->assertRedirect('/home');
    }
}
