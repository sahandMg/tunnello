<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;

class FriendRouteTest extends TestCase
{
    use WithFaker;

    public $data;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * A basic feature test example.
     * @test
     * @return void
     */
    public function add_friend_test()
    {
        Artisan::call('migrate');
        $data = [
            'name' => $this->faker->name,
            'email' => $this->faker->email,
            'password' => '32132332321123',
            'password_confirmation' => '32132332321123',
            '_token' => csrf_token()
        ];
        User::factory(1)->create();
        $user = User::find(1);
        $response = $this->post('/register', $data);
        $this->post(route('friend.add'), ['email' => $user->email])->assertOk();

    }

    /**
     * A basic feature test example.
     * @test
     * @return void
     */
    public function add_friend_with_error()
    {
        Artisan::call('migrate');
        $data = [
            'name' => $this->faker->name,
            'email' => $this->faker->email,
            'password' => '32132332321123',
            'password_confirmation' => '32132332321123',
            '_token' => csrf_token()
        ];
        User::factory(1)->create();
        $user = User::find(1);
        $this->post('/register', $data);
        $this->post(route('friend.add'), ['email' => 'fake@g.com'])->assertStatus(404);
        $this->post(route('friend.add'))->assertStatus(400);

    }
}
