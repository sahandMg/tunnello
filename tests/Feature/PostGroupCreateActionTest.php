<?php

namespace Tests\Feature;

use App\Http\Controllers\Api\Components\Group\PostGroupCreateAction;
use App\Models\Group;
use App\Models\SocketChannel;
use App\Models\User;
use App\Repositories\DB\GroupDB;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;

class PostGroupCreateActionTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('migrate');
    }

    /**
     * A basic feature test example.
     * @test
     * @return void
     */
    public function test_group_component()
    {
        User::factory(3)->create();
        $sender = User::find(1);
        $recipient = User::find(2);
        $middleMan = User::find(3);
        $this->actingAs($sender);
        $m = [$middleMan->id, $recipient->id];
        $data = ['name' => 'test group', 'members' => $m];
        PostGroupCreateAction::execute($data);
       $this->assertEquals(1, Group::get()->count());
       $this->assertEquals('test group', Group::find(1)->name);
       $this->assertEquals(3, SocketChannel::get()->count());
       $this->assertEquals(groupChannelId([$middleMan->id, $recipient->id, $sender->id]), SocketChannel::first()->name);
       $this->assertEquals(3, Group::first()->users->count());
    }
}
