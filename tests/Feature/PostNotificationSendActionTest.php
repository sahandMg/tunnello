<?php

namespace Tests\Feature;

use App\Http\Controllers\Api\Components\Notification\PostNotificationKeyStore;
use App\Http\Controllers\Api\Components\Notification\PostNotificationSendAction;
use App\Models\Agent;
use App\Models\User;
use App\Repositories\DB\AgentDB;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Artisan;
use Tests\TestCase;

class PostNotificationSendActionTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('migrate');
    }
    /**
     * A basic feature test example.
     * @test
     * @return void
     */
    public function test_firebase_notif()
    {
        User::factory(3)->create();
        $sender = User::find(1);
        $recipient = User::find(2);
        $middleMan = User::find(3);
        $this->actingAs($sender);
        AgentDB::createNewAgentRecord();
        $token = "fBRH9z0zw7b5-ZJ3v1gRcL:APA91bGRDRBr7vskuYUPO68rMNbHELwkiRqEJ-c1AovHzHQWmRH5qQCZhnOrM3cUDlOmUGZ43nM1cm0HbUVa7mHMg5uU2pMUXSQWKZBSt0_DEg2Wed3mhtt24_YcJLw-VK6FSneluwuI";
        PostNotificationKeyStore::execute(['token' => $token]);
        $this->assertEquals($token, Agent::first()->device_key);
        $res = PostNotificationSendAction::execute(['recipient' => $sender->id, 'title' => 'Hello', 'body' => 'Bodyyyy']);
        $this->assertEquals(1, json_decode($res, true)['success']);
    }
}
